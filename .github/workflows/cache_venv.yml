# https://adamj.eu/tech/2023/11/02/github-actions-faster-python-virtual-environments/
name: Cache Virtual Environment Workflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string

jobs:
  venv-run:
    name: Setup Venv
    runs-on: ubuntu-latest
    steps:

      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev_requirements.txt') }}
          path: .venv

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install .[DEV]
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

      #----------------------------------------------
      #             save venv to cache
      #----------------------------------------------
      - name: Saved cached virtualenv
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev_requirements.txt') }}
          path: .venv

      #----------------------------------------------
      #        run custom command within venv
      #----------------------------------------------
      - name: Run commands
        run: |
            source .venv/bin/activate
            ${{ inputs.command }}
